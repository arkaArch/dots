______ Connect To Internet Via Wifi ______
# iwctl
[iwd]# device list      # Here my wireless device is wlan0
[iwd]# device wlan0 set-property Powered on
[iwd]# station wlan0 scan
[iwd]# station wlan0 get-networks
[iwd]# station wlan0 connect SSID(WIFI name)
[iwd]# quit


_______ Refresh the iso keyring _________
# pacman-key --init
# pacman -Sy archlinux-keyring




________ Configure Disk ________

-- To view the disks
# lsblk

-- Here I want to install the archlinux in nvme0n1. So,
# fdisk /dev/nvme0n1

-- Create GPT disk
Command (m for help): g

-- Create a linux partition of 1GB for efi
Command (m for help): n                         -- n for new
Partition number (1-128, default 1):            -- Hit enter to select default
First sector (....................):            -- Hit enter to select default
Last sector, .....................): +1G        -- For 1GB size
Command (m for help): t                         -- Type of the partition
Selected partition 1
Partition type or alias (type T to list all): 1 -- 1 is the alias of EFI System
-- Changed type of partition 'Linux filesystem' to 'EFI System'

-- Create a linux partition of 1GB for boot
Command (m for help): n                         -- n for new
Partition number (2-128, default 2):            -- Hit enter to select default
First sector (....................):            -- Hit enter to select default
Last sector, .....................): +600M      -- For 600MB size
-- The default partition type 'Linux filesystem'.

-- Create home partition of remaining diskspace 
Command (m for help): n                         -- n for new
Partition number (3-128, default 3):            -- Hit enter to select default
First sector (....................):            -- Hit enter to select default
Last sector, .....................):            -- Hit enter for select remaining disk spaces
Command (m for help): t                         -- Type of the partition
Partition number (1-3, default 3):              -- Hit enter to select default
Partition type or alias (type T to list all): 44    -- 44 is the alias of Linux LVM
-- Changed type of partition 'Linux filesystem' to 'Linux LVM'

Command (m for help): p                         -- review the partitions
Command (m for help): w                         -- write & exit




________ Format boot and efi Partitions ________
 
-- Format EFI partition
# mkfs.fat -F32 /dev/nvme0n1p1

-- Format boot partition
# mkfs.ext4 /dev/nvme0n1p2



________ Configure the LVM Partition ________

# cryptsetup -v luksFormat /dev/nvme0n1p3
# cryptsetup open /dev/nvme0n1p3 arch
-- Here 'arch' is just a arbitrary name

-- Create a physical volume 
# pvcreate /dev/mapper/arch

-- Create a volume group 
# vgcreate arch /dev/mapper/arch


-- Create a logical volume for root partition
# lvcreate -L 30GB arch -n root

-- Create a logical volume for home partition
# lvcreate -L 250GB arch -n home

-- To display volume group: # vgdisplay
-- To display logical volume : # lvdisplay 

-- Scan for available volume group:
# vgscan

-- Activate all volume group:
# vgchange -ay



________ Format root and home Partitions ________

-- Format root partition
# mkfs.ext4 /dev/arch/root

-- Format home partition
# mkfs.ext4 /dev/arch/home



________ Mount Partitons _______

# mount /dev/arch/root /mnt
# mkdir /mnt/{boot,home}
# mount /dev/nvme0n1p2 /mnt/boot
# mount /dev/arch/home /mnt/home

-- Review the mount points with 
# lsblk



___________ Configure The System ____________

--> Install base package:
# pacstrap -i /mnt base

--> Generate an fstab file:
# genfstab -U -p /mnt >> /mnt/etc/fstab

--> Change root into the new system:
# arch-chroot /mnt

--> Change /etc/pacman.conf
# pacman -S neovim
# nvim /etc/pacman.conf
{
    Color
    ParallelDownloads = 10
    ILoveCandy
}

--> Install some essential packages:
# pacman -S linux linux-firmware base-devel networkmanager grub efibootmgr \
		dosfstools mtools lvm2 intel-ucode man-db man-pages


--> Set the root password:
# passwd

--> Add User:
# useradd -m -g users -G wheel arka
# passwd arka

--> Add user to sudo
# EDITOR=nvim visudo        -- uncomment %wheel ALL=(ALL:ALL) NOPASSWD: ALL

--> Set the HOOKS:
# nvim /etc/mkinitcpio.conf
-- In the line HOOKS=() add 'encrypt', 'lvm2' between 'block' and 'filesystem'

--> Load those custom hooks for linux kernell:
# mkinitcpio -p linux
-- You can see 'Running build hook' for encrypt & lvm2 in the output

--> Set the locale informations:
# nvim /etc/locale.gen  -- uncomment 'en_US.UTF-8 UTF-8'
# locale-gen
# echo "LANG=en_US.UTF-8" >> /etc/locale.conf




_________ Configure and Install Grub __________

# nvim /etc/default/grub
-- Look for GRUB_CMDLINE_LINUX_DEFAULT and add 'cryptdevice=/dev/nvme0n1p3:arch' without quotes between 'lovlevel=3' and 'quiet'.

--> Configure the EFI partition:
# mkdir /boot/EFI
# mount /dev/nvme0n1p1 /boot/EFI

--> Install grub
# grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=Arch --removable
{ 'removable' flag is important for MSI motherboard }

--> Copy grub.mo file:
# cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo

--> Generated config for the grub boot loader
# grub-mkconfig -o /boot/grub/grub.cfg

--> Enable network manager
# systemctl enable NetworkManager

--> Change hostname
# echo "nerdhut" >> /etc/hostname

--> Set the time zone
# ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime

--> Generate /etc/adjtime
# hwclock --systohc             
-- 'systohc' for system to hardware clock 




________ Finish and Reboot ___________

--> exit from chroot
# exit

--> Unmount all drive
# umount -R /mnt

--> Reboot the system
# systemctl reboot
